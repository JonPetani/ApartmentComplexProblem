<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="bioteck.apartment.api.ApartmentComplexAPITest" tests="3" skipped="0" failures="2" errors="0" timestamp="2018-12-20T14:48:47" hostname="jpetani-VirtualBox" time="12.218">
  <properties/>
  <testcase name="queryTest()" classname="bioteck.apartment.api.ApartmentComplexAPITest" time="0.839"/>
  <testcase name="removeApartmentComplexTest()" classname="bioteck.apartment.api.ApartmentComplexAPITest" time="10.912">
    <failure message="java.lang.IndexOutOfBoundsException: Index: 0, Size: 0" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:657)
	at java.util.ArrayList.get(ArrayList.java:433)
	at bioteck.apartment.api.ApartmentComplexAPITest.removeTestApartmentComplex(ApartmentComplexAPITest.java:61)
	at bioteck.apartment.api.ApartmentComplexAPITest.removeApartmentComplexTest(ApartmentComplexAPITest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:171)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:167)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:114)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:59)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:110)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:110)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$100(JUnitPlatformTestClassProcessor.java:77)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:73)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="addApartmentComplexTest()" classname="bioteck.apartment.api.ApartmentComplexAPITest" time="0.461">
    <failure message="com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;])" type="com.fasterxml.jackson.databind.JsonMappingException">com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;]-&gt;org.hibernate.collection.internal.PersistentBag[0]-&gt;bioteck.apartment.model.ApartmentComplex[&quot;portfolio&quot;]-&gt;bioteck.apartment.model.PropertyPortfolio[&quot;allProperties&quot;])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:658)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
	at com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:183)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:541)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:644)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:152)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:117)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)
Caused by: java.lang.StackOverflowError
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:660)
	... 1011 more
</failure>
  </testcase>
  <system-out><![CDATA[Hibernate: alter table Apartment drop foreign key ApartmentComplexId_FK
Hibernate: alter table ApartmentComplex drop foreign key PropertyPortfolioId_FK
Hibernate: alter table Candidate2Apartment drop foreign key ApartmentId_FK
Hibernate: alter table Candidate2Apartment drop foreign key CandidateId_FK
Hibernate: alter table PropertyPortfolio drop foreign key PropertyOwnerId_FK
Hibernate: drop table if exists Apartment
Hibernate: drop table if exists ApartmentComplex
Hibernate: drop table if exists Candidate
Hibernate: drop table if exists Candidate2Apartment
Hibernate: drop table if exists hibernate_sequence
Hibernate: drop table if exists PropertyOwner
Hibernate: drop table if exists PropertyPortfolio
Hibernate: create table Apartment (id bigint not null, Description varchar(255), Number integer not null, MonthlyRent double precision, ApartmentComplexId bigint not null, primary key (id)) engine=InnoDB
Hibernate: create table ApartmentComplex (id bigint not null, Address varchar(255) not null, Description varchar(255), MonthlyCost double precision, Name varchar(255) not null, PropertyPortfolioId bigint, primary key (id)) engine=InnoDB
Hibernate: create table Candidate (id bigint not null, Address varchar(255), FirstName varchar(255) not null, LastName varchar(255) not null, PhoneNumber varchar(255), Income double precision, SSID varchar(255) not null, primary key (id)) engine=InnoDB
Hibernate: create table Candidate2Apartment (Id bigint not null, ApartmentId bigint not null, CandidateId bigint not null, primary key (Id)) engine=InnoDB
Hibernate: create table hibernate_sequence (next_val bigint) engine=InnoDB
Hibernate: insert into hibernate_sequence values ( 1 )
Hibernate: create table PropertyOwner (id bigint not null, Address varchar(255), Name varchar(255) not null, TaxID varchar(255) not null, primary key (id)) engine=InnoDB
Hibernate: create table PropertyPortfolio (id bigint not null, Name varchar(255) not null, PropertyOwnerId bigint not null, primary key (id)) engine=InnoDB
Hibernate: alter table Apartment add constraint UK_p73jh5kffl0wgq32ueeqxis24 unique (ApartmentComplexId, Number)
Hibernate: alter table ApartmentComplex add constraint UK_klb73b3i2shosis6irbri870m unique (Address, Name, PropertyPortfolioId)
Hibernate: alter table PropertyOwner add constraint UK_m8ah6cobt4mspby1y2y9jv4mb unique (Name, TaxID)
Hibernate: alter table PropertyPortfolio add constraint UK_3ntmp7106j8m5nerxjujbdyxk unique (Name, PropertyOwnerId)
Hibernate: alter table Apartment add constraint ApartmentComplexId_FK foreign key (ApartmentComplexId) references ApartmentComplex (id)
Hibernate: alter table ApartmentComplex add constraint PropertyPortfolioId_FK foreign key (PropertyPortfolioId) references PropertyPortfolio (id)
Hibernate: alter table Candidate2Apartment add constraint ApartmentId_FK foreign key (ApartmentId) references Apartment (id)
Hibernate: alter table Candidate2Apartment add constraint CandidateId_FK foreign key (CandidateId) references Candidate (id)
Hibernate: alter table PropertyPortfolio add constraint PropertyOwnerId_FK foreign key (PropertyOwnerId) references PropertyOwner (id)
Hibernate: select max(id) from PropertyOwner
Hibernate: insert into PropertyOwner (Address, Name, TaxID, id) values (?, ?, ?, ?)
Hibernate: select max(id) from PropertyPortfolio
Hibernate: insert into PropertyPortfolio (Name, PropertyOwnerId, id) values (?, ?, ?)
Hibernate: insert into PropertyOwner (Address, Name, TaxID, id) values (?, ?, ?, ?)
Hibernate: insert into PropertyPortfolio (Name, PropertyOwnerId, id) values (?, ?, ?)
]]></system-out>
  <system-err><![CDATA[Dec 20, 2018 9:48:49 AM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {5.3.7.Final}
Dec 20, 2018 9:48:49 AM org.hibernate.cfg.Environment <clinit>
INFO: HHH000206: hibernate.properties not found
Dec 20, 2018 9:48:51 AM org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
Dec 20, 2018 9:48:52 AM org.hibernate.c3p0.internal.C3P0ConnectionProvider configure
INFO: HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/PropertyManagement?serverTimezone=UTC
Dec 20, 2018 9:48:52 AM org.hibernate.c3p0.internal.C3P0ConnectionProvider configure
INFO: HHH10001001: Connection properties: {user=tomcat, password=****}
Dec 20, 2018 9:48:52 AM org.hibernate.c3p0.internal.C3P0ConnectionProvider configure
INFO: HHH10001003: Autocommit mode: false
Dec 20, 2018 9:48:52 AM com.mchange.v2.log.MLog 
INFO: MLog clients using java 1.4+ standard logging.
Dec 20, 2018 9:48:53 AM com.mchange.v2.c3p0.C3P0Registry 
INFO: Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
Dec 20, 2018 9:48:53 AM org.hibernate.c3p0.internal.C3P0ConnectionProvider configure
INFO: HHH10001007: JDBC isolation level: <unknown>
Dec 20, 2018 9:48:53 AM com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource 
INFO: Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@bf42668d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@2e23a69e [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> z8kfsx9z1kmls0qzzyvwq|6a23886, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@5e26416b [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> z8kfsx9z1kmls0qzzyvwq|b72e8f3, jdbcUrl -> jdbc:mysql://localhost:3306/PropertyManagement?serverTimezone=UTC, properties -> {user=******, password=******} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> z8kfsx9z1kmls0qzzyvwq|3a9e6fcb, numHelperThreads -> 3 ]
Thu Dec 20 09:48:53 EST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Thu Dec 20 09:48:53 EST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Thu Dec 20 09:48:53 EST 2018 WARN: Establishing SSL connection without server's identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Dec 20, 2018 9:48:54 AM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
Dec 20, 2018 9:48:55 AM org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator resoveBeanContainer
INFO: HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
Dec 20, 2018 9:48:55 AM org.hibernate.validator.internal.util.Version <clinit>
INFO: HV000001: Hibernate Validator 5.1.1.Final
Dec 20, 2018 9:48:57 AM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5e2bfc0b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
Dec 20, 2018 9:48:58 AM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3e051e00] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
Dec 20, 2018 9:48:58 AM org.hibernate.tool.schema.internal.SchemaCreatorImpl applyImportSources
INFO: HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@61a1e6a1'
Dec 20, 2018 9:48:59 AM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
WARN: SQL Error: 1062, SQLState: 23000
Dec 20, 2018 9:48:59 AM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
ERROR: Duplicate entry 'Charlie Martel-00-10101011' for key 'UK_m8ah6cobt4mspby1y2y9jv4mb'
Dec 20, 2018 9:48:59 AM org.hibernate.internal.ExceptionMapperStandardImpl mapManagedFlushFailure
ERROR: HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
Dec 20, 2018 9:48:59 AM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
WARN: SQL Error: 1452, SQLState: 23000
Dec 20, 2018 9:48:59 AM org.hibernate.engine.jdbc.spi.SqlExceptionHelper logExceptions
ERROR: Cannot add or update a child row: a foreign key constraint fails (`PropertyManagement`.`PropertyPortfolio`, CONSTRAINT `PropertyOwnerId_FK` FOREIGN KEY (`PropertyOwnerId`) REFERENCES `PropertyOwner` (`id`))
Dec 20, 2018 9:48:59 AM org.hibernate.internal.ExceptionMapperStandardImpl mapManagedFlushFailure
ERROR: HHH000346: Error during managed flush [org.hibernate.exception.ConstraintViolationException: could not execute statement]
]]></system-err>
</testsuite>
